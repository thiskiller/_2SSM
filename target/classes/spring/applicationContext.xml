<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--Spring除了控制器不要，其余的业务逻辑都要-->
    <context:component-scan base-package="com.atxiaoniu" >
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>
    <!--导入外部文件-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!--配数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <!--<property name="maxPoolSize"></property>-->
        <!--<property name="minPoolSize"></property>-->
    </bean>
        <!--&lt;!&ndash;配置事务控制：让它控制数据源里面连接的关闭和提交&ndash;&gt;-->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource"></property>
        </bean>
        <tx:annotation-driven/>
        <!--<aop:config>-->
            <!--<aop:pointcut id="mypoint" expression="execution(* com.atguigu.service.*.*(..))"></aop:pointcut>-->
            <!--<aop:advisor advice-ref="mytx" pointcut-ref="mypoint"></aop:advisor>-->
        <!--</aop:config>-->
        <!--&lt;!&ndash;事务增强、事务属性、事务建议&ndash;&gt;-->
        <!--<tx:advice id="mytx">-->
            <!---->
        <!--</tx:advice>-->
    <!--根据配置文件得到sqlSessionfactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="mapperLocations" value="classpath:mybatis/mappers/*.xml"></property>
    </bean>
    <!--将每一个接口的实现加入到IOC容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.atxiaoniu.dao"></property>
    </bean>

</beans>